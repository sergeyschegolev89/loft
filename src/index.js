/* ?? 3 - ?????? ? ???????????? ? ?????????? */

/*
 ??????? 1:

 1.1: ??????? ????????? ?????? ? ??????????? ??????? ? ?????? ??????? true ??? false
 ??????? ?????? ??????? true ?????? ???? fn ??????? true ??? ???? ????????? ???????

 1.2: ?????????? ??????????? ?????????? ? ???????:
   - array ?? ?????? ??? ?????? ?????? (? ??????? "empty array")
   - fn ?? ???????? ???????? (? ??????? "fn is not a function")

 ????????? ???????????? ?????????? ?????? ??? ?????? ? ?????????

 ??????:
   isAllTrue([1, 2, 3, 4, 5], n => n < 10) // ?????? true
   isAllTrue([100, 2, 3, 4, 5], n => n < 10) // ?????? false
 */
function isAllTrue(array, fn) {
    var result;

    if (typeof fn != 'function') {
        throw new Error('fn is not a function');
    }
    if (array.length==0 || !Array.isArray(array)) {
        throw new Error('empty array');
    }
    for (var i=0;i<array.length;i++) {
        result = fn(array[i]);
    }

    return result;
}

/*
 ??????? 2:

 2.1: ??????? ????????? ?????? ? ??????????? ??????? ? ?????? ??????? true ??? false
 ??????? ?????? ??????? true ???? fn ??????? true ???? ?? ??? ?????? ?? ????????? ???????

 2.2: ?????????? ??????????? ?????????? ? ???????:
   - array ?? ?????? ??? ?????? ?????? (? ??????? "empty array")
   - fn ?? ???????? ???????? (? ??????? "fn is not a function")

 ????????? ???????????? ?????????? ?????? ??? ?????? ? ?????????

 ??????:
   isSomeTrue([1, 2, 30, 4, 5], n => n > 20) // ?????? true
   isSomeTrue([1, 2, 3, 4, 5], n => n > 20) // ?????? false
 */
function isSomeTrue(array, fn) {
    var result;

    if (array.length==0 || !Array.isArray(array)) {
        throw new Error('empty array');
    }
    if (typeof fn != 'function') {
        throw new Error('fn is not a function');
    }
    for (var i=0;i<array.length;i++) {
        result = fn(array[i]);
    }

    return result;
}

/*
 ??????? 3:

 3.1: ??????? ????????? ??????? ??????????? ?????????? ??????????, ?????? ?? ??????? ???????? ??????? fn
 ??????? ?????? ?????????? ????????? fn ??? ??????? ??????????? ????????? (????? ????? fn)

 3.2: ??????? ?????? ??????? ?????? ??????????, ??? ??????? fn ????????? ??????????

 3.3: ?????????? ??????????? ?????????? ? ???????:
   - fn ?? ???????? ???????? (? ??????? "fn is not a function")
 */
function returnBadArguments(fn, ...args) {
    var result = [];

    if (typeof fn != 'function') {
        throw new Error('fn is not a function');
    }
    if (args.length==0) {

        return [];
    }
    for (var i=0;i<args.length;i++) {
        try {
            fn(args[i]);
        } catch (e) {
            result.push(args[i]);
        }
    }

    return result;
}

/*
 ??????? 4:

 4.1: ??????? ????? ???????? number (?? ????????? - 0)

 4.2: ??????? ?????? ??????? ??????, ? ???????? ?????? ???? ????????? ???????:
   - sum - ?????????? number ? ??????????? ???????????
   - dif - ???????? ?? number ?????????? ?????????
   - div - ????? number ?? ?????? ????????. ????????? ??????? ?? ????????? ???????? (???? ???????) ? ??? ?????
   - mul - ???????? number ?? ?????? ????????. ????????? ?????????? ?? ????????? ???????? (???? ???????) ? ??? ?????

 ?????????? ???????????? ? ?????? ?????????? ??????? ??????????

 4.3: ?????????? ??????????? ?????????? ? ???????:
   - number ?? ???????? ?????? (? ??????? "number is not a number")
   - ?????-???? ?? ?????????? div ???????? ????? (? ??????? "division by 0")
 */
function calculator(number = 0) {
    if (!isFinite(number)) {
        throw new Error ('number is not a number');
    }
    var obj = {};

    obj.sum = function() {
        var result = number;

        for (var i=0;i<arguments.length;i++) {
            result += arguments[i];
        }

        return result;
    }
    obj.dif = function() {
        var result = number;

        for (var i=0;i<arguments.length;i++) {
            result -= arguments[i];
        }

        return result;
    }
    obj.div = function() {
        var result = number;

        for (var i=0;i<arguments.length;i++) {
            if (arguments[i]==0) {
                throw new Error ('division by 0');
            }
            result = result/arguments[i];
        }

        return result;
    }
    obj.mul = function() {
        var result = number;

        for (var i=0;i<arguments.length;i++) {
            result = result*arguments[i];
        }

        return result;
    }

    return obj;
}

/* ??? ??????? ?????, ??????????? ???????????? ???????? */

export {
    isAllTrue,
    isSomeTrue,
    returnBadArguments,
    calculator
};
